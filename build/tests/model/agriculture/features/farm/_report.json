{
  "title": "Validation report for ogc.model.agriculture.features.farm - Farm - GeoJSON",
  "bblockName": "Farm - GeoJSON",
  "bblockId": "ogc.model.agriculture.features.farm",
  "generated": "2024-07-05T09:12:58.525132+00:00",
  "result": false,
  "items": [
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/model/agriculture/features/farm/example_1_1.json",
        "url": "https://ogcincubator.github.io/aim-swg/build/tests/model/agriculture/features/farm/example_1_1.json",
        "exampleIndex": 1,
        "snippetIndex": 1,
        "language": "json"
      },
      "result": false,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": []
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_1_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_1_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_1_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_1_1.ttl",
              "size": 10,
              "isError": false,
              "message": "Output Turtle example_1_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "JSON_LD",
          "title": "JSON-LD",
          "entries": []
        },
        {
          "name": "TURTLE",
          "title": "Turtle",
          "entries": []
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": []
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": []
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/model/agriculture/features/farm/example_2_1.json",
        "url": "https://ogcincubator.github.io/aim-swg/build/tests/model/agriculture/features/farm/example_2_1.json",
        "exampleIndex": 2,
        "snippetIndex": 1,
        "language": "json"
      },
      "result": false,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": []
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_2_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_2_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_2_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_2_1.ttl",
              "size": 90,
              "isError": false,
              "message": "Output Turtle example_2_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "JSON_LD",
          "title": "JSON-LD",
          "entries": []
        },
        {
          "name": "TURTLE",
          "title": "Turtle",
          "entries": []
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": []
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": []
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/model/agriculture/features/farm/example_3_1.json",
        "url": "https://ogcincubator.github.io/aim-swg/build/tests/model/agriculture/features/farm/example_3_1.json",
        "exampleIndex": 3,
        "snippetIndex": 1,
        "language": "json"
      },
      "result": false,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": []
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_3_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_3_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_3_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_3_1.ttl",
              "size": 98,
              "isError": false,
              "message": "Output Turtle example_3_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "JSON_LD",
          "title": "JSON-LD",
          "entries": []
        },
        {
          "name": "TURTLE",
          "title": "Turtle",
          "entries": []
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": []
        },
        {
          "name": "UNKNOWN",
          "title": "Unknown errors",
          "entries": []
        }
      ]
    }
  ],
  "globalErrors": {
    "UNKNOWN": {
      "exception": "ConstraintLoadError",
      "isError": true,
      "message": "Traceback (most recent call last):\n,  File \"/src/ogc/bblocks/validate.py\", line 657, in _validate_resource\n    validate_inner()\n,  File \"/src/ogc/bblocks/validate.py\", line 583, in validate_inner\n    shacl_conforms, shacl_result, shacl_report, focus_nodes = shacl_validate(\n,  File \"/src/ogc/bblocks/validate.py\", line 960, in shacl_validate\n    conforms, shacl_result, shacl_report = validator.run()\n,  File \"/venv/lib/python3.10/site-packages/pyshacl/validate.py\", line 265, in run\n    _is_conform, _reports = s.validate(\n,  File \"/venv/lib/python3.10/site-packages/pyshacl/shape.py\", line 511, in validate\n    _is_conform, _reports = c.evaluate(target_graph, focus_value_nodes, _e_p)\n,  File \"/venv/lib/python3.10/site-packages/pyshacl/constraints/core/shape_based_constraints.py\", line 108, in evaluate\n    _nc, _r = _evaluate_property_shape(p_shape)\n,  File \"/venv/lib/python3.10/site-packages/pyshacl/constraints/core/shape_based_constraints.py\", line 102, in _evaluate_property_shape\n    _is_conform, _r = prop_shape.validate(target_graph, focus=v, _evaluation_path=_evaluation_path[:])\n,  File \"/venv/lib/python3.10/site-packages/pyshacl/shape.py\", line 508, in validate\n    raise e\n,  File \"/venv/lib/python3.10/site-packages/pyshacl/shape.py\", line 502, in validate\n    c = constraint_component(self)\n,  File \"/venv/lib/python3.10/site-packages/pyshacl/constraints/core/cardinality_constraints.py\", line 136, in __init__\n    raise ConstraintLoadError(\n,pyshacl.errors.ConstraintLoadError: MaxCountConstraintComponent sh:maxCount must be a literal with datatype xsd:integer.\nFor reference, see https://www.w3.org/TR/shacl/#MaxCountConstraintComponent\n"
    }
  },
  "counts": {
    "total": 3,
    "passed": 0,
    "failed": 3
  }
}